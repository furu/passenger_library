<% if language_default_concurrency == 1 && language_max_concurrency == 0 %>
  For <%= language_name %> applications, the maximum process concurrency is assumed to be 1. This means that Passenger assumes each process can handle 1 request at a time.

  This can be changed by setting <%= link_to_config_option(:concurrency_model, locals) %> to `thread`, and by setting <%= link_to_config_option(:thread_count, locals) %>. If you do that, the assumed maximum process concurrency will equal the number of configured threads. This reflects the fact that each thread can handle 1 request at a time.
<% elsif language_default_concurrency == 1 && language_max_concurrency == 1 %>
  For <%= language_name %> applications, the maximum process concurrency is always 1.
<% elsif language_default_concurrency == 0 %>
  For <%= language_name %> applications, the maximum process concurrency is assumed to be *unlimited*. This is because <%= language_runtime_name %> uses <%= language_concurrency_model_name_plural %> for concurrency which is very lightweight, so it can handle a virtually unlimited number of requests concurrently.

  <% if language_concurrency_model == :evented %>
  In practice it may still be more efficient to limit the maximum concurrency and spread concurrent requests across multiple application instances, but this depends very much on the application and workload type. 
  <% end %>
<% else %>
  <% raise "Unknown concurrency scenario: language_default_concurrency=#{language_default_concurrency}, language_max_concurrency=#{language_max_concurrency}" %>
<% end %>
